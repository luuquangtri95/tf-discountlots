{% liquid
  assign section_id = '#shopify-section-' | append: section.id
  assign layout = section.settings.section_layout | handle
  assign main_menu = section.settings.main_menu
  assign logo_width = settings.logo_width | default: '120px,200px'
%}

{%- capture class -%}
  |section-container relative
  {% if layout == 'boxed' %}|container{% endif %}
  {%- if section.settings.show_background -%}|[background:var(--background)] {%- endif -%}
{%- endcapture -%}

{%- capture section_css -%}
  {%- render 'css-resp', class: section_id, css: '--logo-width', value: logo_width -%}
{%- endcapture -%}

{%- render 'snippet-section', type: 'css', value: section_css -%}

<div
  class="{{ class | strip_newlines | replace: '|', ' ' | replace: '   ', '  ' | replace: '  ', ' ' | strip }} bg-white"
  data-section-type="header"
>
  <div class="m-[var(--margin)] p-[var(--padding)]">
    <div class="">
      <div class="flex items-center justify-between py-4">
        <div class="flex-[0_0_var(--logo-width)] text-center text-xl md:text-3xl">
          {%- render 'logo', is_header: true -%}
        </div>
        <div class="lg:hidden">
          <button
            class="cursor-pointer"
            type="button"
            data-template="#mobileMenuTemplate"
            data-control="#mobileMenu"
            aria-label="{{- 'accessibility.text.mobile_menu' | t -}}"
          >
            {{ 'icon-hamburger.svg' | inline_asset_content }}
            <span class="sr-only">{{- 'accessibility.text.mobile_menu' | t -}}</span>
          </button>
        </div>

        <div class="hidden lg:block">
          <ul class="flex">
            {%- for link in main_menu.links -%}
              <li class="p-[15px] text-[14px]">
                <a href="{{ link.url }}">{{ link.title }}</a>
              </li>
            {%- endfor -%}

            <li class="rounded-lg bg-[#f17105] p-[15px] text-[14px] font-bold text-[#fff]">
              <a href="#">Search Land For Sale</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="sub-menu-mobile absolute left-0 right-0 top-[100%] hidden border border-t-[1px] bg-white py-[20px] lg:hidden">
  <div class="{{ class | strip_newlines | replace: '|', ' ' | replace: '   ', '  ' | replace: '  ', ' ' | strip }}">
    <ul class="">
      {%- for link in main_menu.links -%}
        <li class="p-[15px] text-[14px]">
          <a href="{{ link.url }}">{{ link.title }}</a>
        </li>
      {%- endfor -%}

      <li class="rounded-lg bg-[#f17105] p-[15px] text-[14px] font-bold text-[#fff]">
        <a href="#">Search Land For Sale</a>
      </li>
    </ul>
  </div>
</div>

<script>
  class Header {
    constructor() {
      this._navMobile = document.querySelector('[data-control="#mobileMenu"]');
      this._subMenuMobile = document.querySelector('.sub-menu-mobile');

      if (this._navMobile && this._subMenuMobile) {
        this._navMobile.addEventListener('click', (event) => {
          event.stopPropagation();
          this.toggleMenu();
        });

        document.addEventListener('click', (event) => this.handleClickOutside(event));
      }
    }

    toggleMenu() {
      const isHidden = this._subMenuMobile.classList.contains('hidden');
      this._subMenuMobile.classList.toggle('hidden', !isHidden);
    }

    handleClickOutside(event) {
      if (
        !this._subMenuMobile.classList.contains('hidden') &&
        !this._subMenuMobile.contains(event.target) &&
        !this._navMobile.contains(event.target)
      ) {
        this._subMenuMobile.classList.add('hidden');
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const _ = new Header();
  });
</script>

{%- schema -%}
{
  "name": "Header",
  "tag": "section",
  "settings": [
    // SECTION SETTINGS
    {
      "type": "link_list",
      "id": "main_menu",
      "label": "Main menu",
      "default": "main-menu"
    },
    // GENERAL SETTINGS
    {
      "type": "header",
      "content": "General settings"
    },
    {
      "type": "select",
      "id": "section_layout",
      "label": "t:general.styles.section_layout.label",
      "options": [
        {
          "value": "boxed",
          "label": "t:general.styles.section_layout.options.option_1"
        },
        {
          "value": "wide",
          "label": "t:general.styles.section_layout.options.option_2"
        }
      ],
      "default": "boxed"
    },
    {
      "type": "text",
      "id": "padding",
      "label": "Section Padding",
      "default": "50px 20px",
      "info": "Define the padding for the section. Format: Top Right Bottom Left (e.g., 50px 20px)."
    },
    {
      "type": "text",
      "id": "margin",
      "label": "Margin",
      "info": "t:blocks.block_style.settings.block_margin.info"
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Header"
    }
  ]
}
{%- endschema -%}
